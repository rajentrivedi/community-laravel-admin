version: "3.9"

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '80:80'
      - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
    environment:
      FRONTEND_URL: '${FRONTEND_URL}'
      WWWUSER: '${WWWUSER:-1000}'
      WWWGROUP: '${WWWGROUP:-1000}'
      APP_ENV: '${APP_ENV:-local}'
      OCTANE_SERVER: frankenphp
      # Do not hardcode DB credentials here to allow .env override
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./:/app
    networks:
      - sail
    depends_on:
      - pgsql
      - redis

  pgsql:
    image: postgres:17-alpine
    container_name: pgsql
    restart: always
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
      POSTGRES_DB: '${DB_DATABASE:-community-app}'
      POSTGRES_USER: '${DB_USERNAME:-postgres}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - sail-pgsql:/var/lib/postgresql/data
    networks:
      - sail
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_DATABASE:-community-app}"]
      interval: 5s
      retries: 5
      timeout: 5s

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - sail-redis:/data
    networks:
      - sail
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 3
      timeout: 5s

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - sail
    depends_on:
      - pgsql

networks:
  sail:
    driver: bridge

volumes:
  sail-pgsql:
    driver: local
  sail-redis:
    driver: local
