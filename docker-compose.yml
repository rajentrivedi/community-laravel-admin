version: "3.9"

services:
  # Laravel App
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "80:80"
      - "${VITE_PORT:-5173}:${VITE_PORT:-5173}"
    environment:
      APP_ENV: "${APP_ENV:-local}"
      FRONTEND_URL: "${FRONTEND_URL}"
      WWWUSER: "${WWWUSER}"
      WWWGROUP: "${WWWGROUP}"
      OCTANE_SERVER: frankenphp

      # DB configuration (Laravel will read from .env)
      # Comment these if using external DB
      # DB_HOST: pgsql
      # DB_PORT: 5432
      # DB_DATABASE: "${DB_DATABASE}"
      # DB_USERNAME: "${DB_USERNAME}"
      # DB_PASSWORD: "${DB_PASSWORD}"

    volumes:
      - .:/app
    networks:
      - sail
    depends_on:
      - pgsql
      - redis

  # Local Postgres (optional, only for local development)
  pgsql:
    container_name: pgsql
    image: postgres:17-alpine
    ports:
      - "${FORWARD_DB_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: "${DB_DATABASE:-community-app}"
      POSTGRES_USER: "${DB_USERNAME:-postgres}"
      POSTGRES_PASSWORD: "${DB_PASSWORD:-secret}"
    volumes:
      - sail-pgsql:/var/lib/postgresql/data
    networks:
      - sail
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USERNAME:-postgres}", "-d", "${DB_DATABASE:-community-app}"]
      retries: 3
      timeout: 5s

  # Adminer (DB management)
  adminer:
    image: adminer:latest
    restart: always
    ports:
      - "8080:8080"
    networks:
      - sail
    depends_on:
      - pgsql

  # Redis
  redis:
    image: redis:alpine
    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"
    volumes:
      - sail-redis:/data
    networks:
      - sail
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s

# Networks
networks:
  sail:
    driver: bridge

# Volumes
volumes:
  sail-pgsql:
    driver: local
  sail-redis:
    driver: local
